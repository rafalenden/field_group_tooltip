<?php

/**
 * @file
 * Make possible to show entity fields as tooltip in field group.
 */

/**
 * Implements hook_field_group_formatter_info().
 */
function field_group_tooltip_field_group_formatter_info() {
  return array(
    'display' => array(
      'tooltip' => array(
        'label' => t('Tooltip'),
        'instance_settings' => array(
          'classes' => '',
          'css_selector' => '',
          'width' => 250,
          'hide_if_empty' => 0,
        ),
      ),
    ),
  );
}

/**
 * Implements hook_field_group_format_settings().
 */
function field_group_tooltip_field_group_format_settings($group) {
  $form = array();

  $mode = $group->mode == 'form' ? 'form' : 'display';
  $field_group_types = field_group_formatter_info();
  $formatter = $field_group_types[$mode][$group->format_type];
  $default_settings = $formatter['instance_settings'];
  $settings = $group->format_settings['instance_settings'];

  $form['instance_settings']['css_selector'] = array(
    '#title' => t('CSS selector of tooltip parent'),
    '#type' => 'textfield',
    '#default_value' => isset($settings['css_selector']) ?
     $settings['css_selector'] : $default_settings['css_selector'],
  );

  if ($mode == 'form') {
    $form['instance_settings']['width'] = array(
      '#title' => t('Tooltip width'),
      '#type' => 'textfield',
      '#size' => 4,
      '#maxlength' => 4,
      '#suffix' => 'px',
      '#default_value' => isset($settings['width']) ?
       $settings['width'] : $default_settings['width'],
    );
  }

  return $form;
}

/**
 * Implements hook_field_group_pre_render().
 */
function field_group_tooltip_field_group_pre_render(&$element, $group, &$form) {
  if (!module_exists('beautytips')) {
    return FALSE;
  }

  $css_selector = str_replace('_', '-', '.' . $group->entity_type);
  $path = drupal_get_path('module', 'field_group_tooltip');

  $tooltip = array(
    '#type' => 'markup',
    '#weight' => $group->weight,
    '#prefix' => '<div class="field-group field-group-tooltip">',
    '#suffix' => '</div>',
    '#attached' => array('css' => array($path . '/css/field_group_tooltip.css')),
  );

  $options['field_group_tooltip'] = array(
    'cssSelect' => $css_selector,
    'contentSelector' => '$(this).find(".field-group-tooltip").html()',
    'trigger' => array(0 => 'mouseover'),
    'width' => 250,
  );
  beautytips_add_beautytips($options);
  $element += $tooltip;
}
